#include <stdio.h>
#include "cal.h"




void main() {

	int a = 10;
	int b = 20;


	printf("%d + %d = %d\n", a, b, add(a, b));
	printf("%d * %d = %d\n", a, b, mul(a, b));
	printf("%d - %d = %d\n", a, b, sub(a, b));
	printf("%d / %d = %.1f\n", a, b, div(a, b));

	


	//컴파일 과정에 대해서

/* 컴퓨터는  0/1만 이해한다. (이진수만) 
* 메모리에도 0/1만 저장한다. 우리가 만든 코드도 메모리에 저장된다. 
* 우리가 만든 코드도 이진수로 저장된다. 
* 
* 우리가 과연 이진수로 코딩할 수 있을까?????????????
* 이진수로 코딩하는 사람들은 천재고......ㅋㅋㅋ
* 
* 이진수는 우리가 이해하기 어렵고
* 그래서 나온 것이 프로그래밍 언어개 개발됨
* 
* 컴퓨터 언어 > 컴퓨터가 이해할 수 있게 변환해야하지
* 이렇게 변환하는 과정을 컴파일이라고 한다.
* 
* =========================================================
* 컴파일 과정 . \
* 
*  프리 프로세서가 작동 > 컴파일 > 링크 >exe 파일 생성
* 이 과정을 통틀어서 '빌드'라고 한다. 
* 
* 
*1. 프리 프로세서 (#붙은 include 같은 명령어) 처리한다. f_main.c 을 만들고 그 안에 실제로 "cal.h"같은 녀석들을 f-main 안에 첨부한다. 
* 그리고 그 다음 main에 있는 코드들이 f_main.c에 추가된다.  (.class랑 같은 거인가봄)
* cal.c 같은 녀석들도 f_cal.c 같은 녀석을 만든다. 
* 
* 
* 2. 컴파일러가 작동(이 정리해 놓은 문서를 가져다가 기계어로 번역) f_main.obj라는 목적 파일을 생성 (실제로 add를 사용해서 call _add라고 남는다. )
* 
* 3. 링크
* 메인 안에서 사용한 add()라는 함수 등, 사용한 함수가 있는 파일에 가서 그 함수만 가져온다. 그리고 그 함수와 메인을 합쳐서 하나의 파일로 만든다.
* 
* 
* 4. 실행파일
*	이렇게 다 합쳐진 파일은 실행 파일이 된다. 
* 
* 
* 
* =============================================
* 
* 에러가 났을 떄 어떤 단계에서 에러가 났는지 알 수 있어야한다. 
* 
* 에러는 모든 단계에서 날 수 있다. 
*  컴파일러 단계에서 빈번한 실수는 (재정의 되었습니다. / 정의 되었습니다.
*  링크 단계에서 LNK~~ 외부 참조가 잘못 되면 에러가 발생된다.
* 
* 
*/

}